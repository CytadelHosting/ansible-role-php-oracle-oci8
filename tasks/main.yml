---
# tasks file for CytadelHosting.php-oracle-oci8


- name: Check if Oracle Instant Client librairies are already installed.
  shell: if grep -q '/opt/oracle/instantclient' /etc/ld.so.conf.d/oracle.conf; then echo "true"; else echo "false"; fi
  args:
    executable: /bin/bash
  check_mode: false
  changed_when: false
  register: oracle_instantclient_installed
  tags:
    - oracle-instantclient
    - php

- name: debug variable
  debug:
    msg: "Oracle Instant Client is installed: {{ oracle_instantclient_installed.stdout | bool }}"
  tags:
    - oracle-instantclient
    - php

- name: Check if the PHP oci8 extension is already enabled.
  shell: php -m | if grep -q oci8; then echo "true"; else echo "false"; fi
  args:
    executable: /bin/bash
  check_mode: false
  changed_when: false
  register: php_oci8_enabled
  tags:
    - oracle-instantclient
    - php

- name: debug variable
  debug:
    msg: "php has OCI8 support enabled: {{ php_oci8_enabled.stdout | bool }}"
  tags:
    - oracle-instantclient
    - php

- name: Check if the PHP PDO_OCI extension is already enabled.
  shell: php -m | if grep -iq pdo_oci; then echo "true"; else echo "false"; fi
  args:
    executable: /bin/bash
  check_mode: false
  changed_when: false
  register: php_pdo_oci_enabled


- name: debug version cible de OIC
  debug:
    var: instantclient_version
  tags:
    - oracle-instantclient
    - php

- include_tasks: install-oracle-instantclient.yml
  with_items: "{{ instantclient_sources }}"
  when:
    - not (oracle_instantclient_installed.stdout | bool) or oracle_instantclient_force_reinstall
    - oic_item.version == instantclient_version
  loop_control:
    loop_var: oic_item
  tags:
    - oracle-instantclient
    - php

# Flush handlers declared in install-oracle-instantclient.yml, as we may need ldconfig reload before building oci8 php driver
- name: flush handlers
  meta: flush_handlers


- include: install-php-oci8.yml
  when: not (php_oci8_enabled.stdout | bool) or oci8_force_reinstall
  tags:
    - oracle-instantclient
    - php

# pdo_oci is deprecated
#- include: install-php-pdo-oci.yml
#  when:  php_pdo_oci_enabled.stdout == 'false'
